{"version":3,"sources":["classes/Helper.js","components/Map.js","classes/Person.js","components/Filter.js","components/PersonPanel.js","components/RightPanel.js","classes/PersonInfo.js","components/App.js","index.js"],"names":["popupText","position","NA","LT","LG","date","type","substring","numberToDateString","DA","str","TI","substr","Color","this","current","names","val","length","color","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","center","Map","lastPos","markers","polylines","props","people","forEach","person","index","isShown","boatIcon","color2","divIcon","html","className","iconSize","iconAnchor","generateBoatIcon","tmpPolyline","positions","pos","problem","intDate","startDate","endDate","coordinates","push","Marker","icon","Popup","dangerouslySetInnerHTML","__html","ID","checkProblem","Polyline","pathOptions","dashArray","MapContainer","zoom","TileLayer","url","Component","Person","name","Number","MAX_SAFE_INTEGER","didChange","Filter","Form","Check","id","checked","isChecked","onChange","togglePerson","PersonPanel","style","display","RightPanel","personList","peeps","map","PersonInfo","n","shown","start","end","infractions","sos","App","state","rightPanel","tmpPeople","tmpPeopleInfo","setState","axios","get","then","res","colorGen","lastName","cnt","data","tmpPerson","getNext","peopleInfo","tmp","Row","Col","lg","md","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b082e8d.chunk.js","sourcesContent":["import L from 'leaflet'\n\nexport function generateBoatIcon(color = \"black\", color2 = \"black\") {\n    return L.divIcon({\n        html: `<svg \n height=\"24\"\n  viewBox=\"0 0 512 512\"\n   width=\"24\"\n   preserveAspectRatio=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n    <path d=\"m90.997 364.003h119.998v-216.821l-132.375 193.347c-6.805 9.94.33 23.474 12.377 23.474z\" fill=\"` + color + `\"> </path>\n    <path d=\"m488.49 391.572h-224.999v-27.569h149.997c8.28 0 15-6.72 15-15 0-45.429-9.19-87.148-27.32-124.008-29.039-59.049-81.459-104.268-137.677-127.378v-82.608c0-10.61-10.75-17.85-20.55-13.93-.05.02-.09.04-.14.05-4.03 1.66-89.908 36.969-90.008 37.009-12.31 5.06-12.39 22.51-.13 27.69l80.829 34.129v291.615h-209.994c-9.217 0-16.388 8.233-14.803 17.86 16.103 105.627 13.38 87.765 13.693 89.818 1.112 7.331 7.414 12.75 14.83 12.75h335.291c51.636 0 97.805-29.107 120.101-73.312.075.006.152.007.227.013 4.44-8.93 7.89-18.39 10.24-28.21 2.365-9.88-4.925-18.919-14.587-18.919zm-224.999-248.235c40.059 49.959 40.119 120.338 0 170.367z\" fill=\"` + color2 + `\" ></path>\n    </g></svg>`,\n        className: \"dummy\",\n        iconSize: [0, 0],\n        iconAnchor: [12, 12],\n    });\n}\n\nfunction numberToDateString(date, type = 0) {\n    if (!type) {\n        return date.substring(6, 8) + '/' + date.substring(4, 6) + '/' + date.substring(0, 4);\n    }\n    if (type === 1) {\n        return date.substring(0, 4) + '-' + date.substring(4, 6) + '-' + date.substring(6, 8);\n    }\n}\n\nfunction numberToTimeString(str) {\n    return str.substr(0, 2) + ':' + str.substr(2, 2)\n}\n\nexport function popupText(position) {\n    return '<p style=\"text-align:center;\">' + position.NA +\n        '<br>(' + position.LT + ' , ' + position.LG + ')' +\n        '<br>' + numberToDateString(position.DA) + \" at \" + numberToTimeString(position.TI) +\n        '</p>'\n}\n\n\nexport class Color {\n    constructor() {\n        this.current = 0;\n        this.names = [\n            \"#00ffff\", \"#ff00ff\", \"#ffff00\", \"#ffffff\",\n            \"#00008b\", \"#008b8b\", \"#a9a9a9\", \"#006400\",\n            \"#9932cc\", \"#e9967a\",\n            \"#add8e6\", \"#e0ffff\", \"#90ee90\", \"#d3d3d3\",\n            \"#808000\", \"#ffa500\", \"#ffc0cb\", \"#800080\",\n            \"#00ff00\", \"#0000ff\", \"#f0ffff\", \"#f5f5dc\",\n            \"#bdb76b\", \"#8b008b\", \"#556b2f\", \"#ff8c00\",\n            \"#ffd700\", \"#008000\", \"#4b0082\", \"#f0e68c\",\n            \"#ffb6c1\", \"#ffffe0\", \"#00ff00\", \"#000080\",\n            \"#800080\", \"#c0c0c0\",\n        ]\n    }\n\n    getNext() {\n        let val = this.names[this.current];\n        this.current++;\n        this.current %= this.names.length;\n        return val\n    }\n\n    shadeHexColor(color, percent) {\n        var f = parseInt(color.slice(1), 16), t = percent < 0 ? 0 : 255, p = percent < 0 ? percent * -1 : percent,\n            R = f >> 16, G = f >> 8 & 0x00FF, B = f & 0x0000FF;\n        return \"#\" + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n    }\n\n}","import {MapContainer, Marker, Polyline, Popup, TileLayer} from 'react-leaflet';\nimport React, {Component} from 'react';\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport '../css/styles.css'\nimport {generateBoatIcon, popupText} from '../classes/Helper'\n\n\n//default icons fix\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconUrl: '/static/images/marker-icon.png',\n    iconRetinaUrl: '/static/images/marker-icon-2x.png',\n    shadowUrl: '/static/images/marker-shadow.png'\n});\n\nlet center = [36, 10.5];\n\nclass Map extends Component {\n    checkProblem(position, lastPos) {\n        if (lastPos.DA === position.DA) {\n            if (position.TI - lastPos.TI > 200) return true;\n        } else {\n            //TODO: check the date\n            //this code returns a wrong value if we are on different dates (more than one day)\n            //and the difference between times is 100 (1 hour)\n            //HINT: i can use Date object\n            if ((\"2400\" - lastPos.TI) + parseInt(position.TI) > 200) return true;\n        }\n    }\n\n    render() {\n        let markers = [];\n        let polylines = [];\n        this.props.people.forEach((person, index) => {\n\n            if (person.isShown) {\n\n                let boatIcon = generateBoatIcon(person.color)\n                let lastPos = \"\";\n                let tmpPolyline = [];\n\n                person.positions.forEach((pos) => {\n\n                    let problem = false;\n\n                    let intDate = parseInt(pos.DA);\n                    if (intDate >= person.startDate && intDate <= person.endDate) {\n\n                        let coordinates = [pos.LT, pos.LG];\n                        markers.push(\n                            <Marker key={pos.ID} position={coordinates} icon={boatIcon}>\n                                <Popup>\n                                    <p dangerouslySetInnerHTML={{__html: popupText(pos)}}>\n                                    </p>\n                                </Popup>\n                            </Marker>\n                        )\n\n                        if (index !== 0) {\n                            problem = this.checkProblem(pos, lastPos);\n                        }\n\n                        if (problem) {\n                            polylines.push(<Polyline key={pos.ID} pathOptions={{color: person.color}} positions={tmpPolyline}/>)\n\n                            tmpPolyline = [[lastPos.LT, lastPos.LG], coordinates];\n                            polylines.push(<Polyline key={pos.ID+\"a\"}\n                                pathOptions={{color: 'red', dashArray: \"20,20\"}}\n                                positions={tmpPolyline}\n                            />)\n                            tmpPolyline = []\n\n                        }\n\n\n                        tmpPolyline.push(coordinates)\n                        lastPos = pos;\n                    }\n\n                })\n                if (tmpPolyline.length > 1)\n                    polylines.push(<Polyline key={index+\"b\"} pathOptions={{color: person.color}} positions={tmpPolyline}/>)\n            }\n        })\n\n        return (\n            <MapContainer center={center} zoom={8}>\n                <TileLayer\n                    url={\"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg\"}\n                />\n                {markers}\n                {polylines}\n            </MapContainer>\n        )\n    }\n}\n\nexport default Map;","\nclass Person{\n    constructor() {\n        this.name=\"\";\n        this.positions=[];\n        this.isShown=true;\n        this.startDate=0;\n        this.endDate=Number.MAX_SAFE_INTEGER;\n        this.didChange=false;\n        this.color=\"\"\n    }\n}\nexport default Person;","import { Form } from \"react-bootstrap\";\n\nimport { Component } from \"react\";\n\nclass Filter extends Component {\n    render() {\n        return (\n            <Form.Check\n                type=\"switch\"\n                id=\"custom-switch\"\n                checked={this.props.isChecked}\n                onChange={() => {\n                    this.props.togglePerson(this.props.index);\n                }}\n            />\n        );\n    }\n}\n\nexport default Filter;\n","import { Component } from \"react\";\nimport Filter from \"./Filter\";\n\n// function MyFilter(props) {\n//     return (\n//         <div>\n//             <input\n//                 type=\"checkbox\"\n//                 id=\"check\"\n//                 checked={props.checked}\n//                 onChange={() => {\n//                     props.togglePerson(props.index);\n//                 }}\n//             />\n//             <label htmlFor=\"check\">{props.name}</label>\n//         </div>\n//     );\n// }\n\nclass PersonPanel extends Component {\n    render() {\n        return (\n            <div style={{ display: \"flex\" }}>\n                <Filter\n                    isChecked={this.props.checked}\n                    index={this.props.index}\n                    togglePerson={this.props.togglePerson}\n                />\n                <span>{this.props.name}</span>\n            </div>\n            // <MyFilter\n            //     checked={this.props.checked}\n            //     name={this.props.name}\n            //     togglePerson={this.props.togglePerson}\n            //     index={this.props.index}\n            // />\n        );\n    }\n}\n\nexport default PersonPanel;\n","import { Component } from \"react\";\nimport PersonPanel from \"./PersonPanel\";\n\nclass RightPanel extends Component {\n    render() {\n        let personList = this.props.peeps.map((person, index) => {\n            return (\n                <PersonPanel\n                    key={person.name}\n                    index={index}\n                    name={person.name}\n                    checked={person.isShown}\n                    togglePerson={this.props.togglePerson}\n                />\n            );\n        });\n\n        return <div>{personList}</div>;\n    }\n}\n\nexport default RightPanel;\n","\nclass PersonInfo{\n    constructor(n=\"\",shown=true,start=\"\",end=\"\") {\n        this.name=n;\n        this.infractions=[];\n        this.sos=[];\n        this.isShown=shown;\n        this.startDate=start;\n        this.endDate=end;\n    }\n\n}\nexport default PersonInfo;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Map from \"./Map\";\nimport Person from \"../classes/Person\";\nimport { Col, Row } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport RightPanel from \"./RightPanel\";\nimport PersonInfo from \"../classes/PersonInfo\";\nimport { Color } from \"../classes/Helper\";\n\nclass App extends Component {\n    state = {\n        people: [],\n        rightPanel: [],\n    };\n\n    // toggleFunctions = [];\n\n    togglePerson(index) {\n        let tmpPeople = [...this.state.people];\n        let tmpPeopleInfo = [...this.state.rightPanel];\n        tmpPeople[index].isShown = !tmpPeople[index].isShown;\n        tmpPeopleInfo[index].isShown = !tmpPeopleInfo[index].isShown;\n        this.setState({ people: tmpPeople, rightPanel: tmpPeopleInfo });\n        // this.setState((state) => {\n        //     let tmpPeople = [...state.people];\n        //     let tmpPeopleInfo = [...state.rightPanel];\n        //     tmpPeople[index].isShown = !tmpPeople[index].isShown;\n        //     tmpPeopleInfo[index].isShown = !tmpPeopleInfo[index].isShown;\n        //     console.log({ people: tmpPeople, rightPanel: tmpPeopleInfo });\n        //     return { people: tmpPeople, rightPanel: tmpPeopleInfo };\n        // });\n    }\n\n    componentDidMount() {\n        axios.get(`/api`).then((res) => {\n            let colorGen = new Color();\n            let lastName = \"\";\n            let people = [];\n            let cnt = -1;\n            res.data.forEach((position, index) => {\n                if (lastName !== position.NA) {\n                    let tmpPerson = new Person();\n                    tmpPerson.color = colorGen.getNext();\n                    tmpPerson.name = position.NA;\n                    cnt++;\n                    lastName = tmpPerson.name;\n                    people.push(tmpPerson);\n                }\n                people[cnt].positions.push(position);\n            });\n            let peopleInfo = [];\n            people.forEach((person, index) => {\n                let tmp = new PersonInfo(\n                    person.name,\n                    true,\n                    person.positions[0].DA,\n                    person.positions[person.positions.length - 1].DA\n                );\n                peopleInfo.push(tmp);\n            });\n            // people.forEach((p, index) => {\n            //     this.toggleFunctions.push(() => {\n            //         let tmpPeople = this.state.people.slice();\n            //         let tmpPeopleInfo = this.state.rightPanel.slice();\n            //         tmpPeople[index].isShown = !tmpPeople[index].isShown;\n            //         tmpPeopleInfo[index].isShown =\n            //             !tmpPeopleInfo[index].isShown;\n            //         this.setState({\n            //             people: tmpPeople,\n            //             rightPanel: tmpPeopleInfo,\n            //         });\n            //     });\n            // });\n            this.setState({\n                people: people,\n                rightPanel: peopleInfo,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col lg={8} md={12}>\n                        <Map people={this.state.people} />\n                    </Col>\n                    <Col lg={4} md={12}>\n                        <RightPanel\n                            peeps={this.state.rightPanel}\n                            togglePerson={this.togglePerson.bind(this)}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["components/Map.js","classes/Helper.js","classes/Position.js","classes/Person.js","components/Filter.js","components/Info.js","components/PersonPanel.js","components/RightPanel.js","components/App.js","index.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","center","Map","console","log","Date","now","MapContainer","zoom","TileLayer","url","Object","values","this","props","people","map","person","peopleState","name","isShown","getLayerGroup","Component","generateBoatIcon","color","color2","divIcon","html","className","iconSize","iconAnchor","numberToDateString","date","type","substring","numberToTimeString","str","substr","Color","current","names","val","length","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","Position","pos","lt","lg","da","time","ti","id","problem","icons","Marker","position","icon","riseOnHover","Popup","popupText","Person","polylines","positions","markers","problems","oldMarkers","oldPolylines","state","lastPos","tmpPolyline","checkDate","checkProblem","insertPolyline","push","getMarker","LayerGroup","posDate","diff","obj","text","ref","dashArray","Polyline","pathOptions","startDate","endDate","Filter","style","display","Form","Check","checked","isChecked","onChange","togglePerson","width","marginTop","marginBottom","e","setDate","target","value","yyyymmdd","marginLeft","Info","list","key","index","Accordion","Item","eventKey","Header","Body","Table","striped","bordered","hover","PersonPanel","padding","border","RightPanel","overflowY","height","keys","mm","getMonth","dd","getDate","getFullYear","join","App","axios","get","then","res","colorGen","data","undefined","na","getNext","update","setState","tmp","assign","a","layerGroups","Container","Row","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d37d35f.chunk.js","sourcesContent":["import {MapContainer, TileLayer,} from \"react-leaflet\";\nimport React, {Component} from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../css/styles.css\";\n\n//default icons fix\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconUrl: \"/static/images/marker-icon.png\",\n    iconRetinaUrl: \"/static/images/marker-icon-2x.png\",\n    shadowUrl: \"/static/images/marker-shadow.png\",\n});\n\nlet center = [36.08851338894426, 10.80333970970808];\n\nclass Map extends Component {\n\n\n    render() {\n\n        console.log(\"start render Map\", Date.now())\n\n        return (\n            <MapContainer center={center} zoom={7.8}>\n                <TileLayer\n                    url={\n                        \"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg\"\n                    }\n                />\n                {Object.values(this.props.people).map(person => this.props.peopleState[person.name].isShown ? person.getLayerGroup() : null)}\n            </MapContainer>\n        );\n\n    }\n}\n\nexport default Map;\n","import L from 'leaflet'\n\nexport function generateBoatIcon(color = \"black\", color2 = \"black\") {\n    return L.divIcon({\n        html: `<svg \n height=\"24\"\n  viewBox=\"0 0 512 512\"\n   width=\"24\"\n   preserveAspectRatio=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n    <path d=\"m90.997 364.003h119.998v-216.821l-132.375 193.347c-6.805 9.94.33 23.474 12.377 23.474z\" fill=\"` + color + `\"> </path>\n    <path d=\"m488.49 391.572h-224.999v-27.569h149.997c8.28 0 15-6.72 15-15 0-45.429-9.19-87.148-27.32-124.008-29.039-59.049-81.459-104.268-137.677-127.378v-82.608c0-10.61-10.75-17.85-20.55-13.93-.05.02-.09.04-.14.05-4.03 1.66-89.908 36.969-90.008 37.009-12.31 5.06-12.39 22.51-.13 27.69l80.829 34.129v291.615h-209.994c-9.217 0-16.388 8.233-14.803 17.86 16.103 105.627 13.38 87.765 13.693 89.818 1.112 7.331 7.414 12.75 14.83 12.75h335.291c51.636 0 97.805-29.107 120.101-73.312.075.006.152.007.227.013 4.44-8.93 7.89-18.39 10.24-28.21 2.365-9.88-4.925-18.919-14.587-18.919zm-224.999-248.235c40.059 49.959 40.119 120.338 0 170.367z\" fill=\"` + color2 + `\" ></path>\n    </g></svg>`,\n        className: \"dummy\",\n        iconSize: [0, 0],\n        iconAnchor: [12, 12],\n    });\n}\n\nexport function numberToDateString(date, type = 0) {\n    if (!type) {\n        return date.substring(6, 8) + '/' + date.substring(4, 6) + '/' + date.substring(0, 4);\n    }\n    if (type === 1) {\n        return date.substring(0, 4) + '-' + date.substring(4, 6) + '-' + date.substring(6, 8);\n    }\n}\n\nexport function numberToTimeString(str) {\n    return str.substr(0, 2) + ':' + str.substr(2, 2)\n}\n\nexport function popupText(position, type = 1) {\n    if (type)\n        return '<p style=\"text-align:center;\">' + position.NA +\n            '<br>(' + position.LT + ' , ' + position.LG + ')' +\n            '<br>' + numberToDateString(position.DA) + \" at \" + numberToTimeString(position.TI) +\n            '</p>'\n\n}\n\n\nexport class Color {\n    constructor() {\n        this.current = 0;\n        this.names = [\n            \"#00ffff\", \"#ff00ff\", \"#ffff00\", \"#ffffff\",\n            \"#00008b\", \"#008b8b\", \"#a9a9a9\", \"#006400\",\n            \"#9932cc\", \"#e9967a\",\n            \"#add8e6\", \"#e0ffff\", \"#90ee90\", \"#d3d3d3\",\n            \"#808000\", \"#ffa500\", \"#ffc0cb\", \"#800080\",\n            \"#00ff00\", \"#0000ff\", \"#f0ffff\", \"#f5f5dc\",\n            \"#bdb76b\", \"#8b008b\", \"#556b2f\", \"#ff8c00\",\n            \"#ffd700\", \"#008000\", \"#4b0082\", \"#f0e68c\",\n            \"#ffb6c1\", \"#ffffe0\", \"#00ff00\", \"#000080\",\n            \"#800080\", \"#c0c0c0\",\n        ]\n    }\n\n    getNext() {\n        let val = this.names[this.current];\n        this.current++;\n        this.current %= this.names.length;\n        return val\n    }\n\n    shadeHexColor(color, percent) {\n        var f = parseInt(color.slice(1), 16), t = percent < 0 ? 0 : 255, p = percent < 0 ? percent * -1 : percent,\n            R = f >> 16, G = f >> 8 & 0x00FF, B = f & 0x0000FF;\n        return \"#\" + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n    }\n\n}\n\n/**\n *\n * @param {Date} date\n * @returns {number|string|*}\n * @constructor\n */\nexport function dateToString(date) {\n}","import {Marker, Popup} from \"react-leaflet\";\nimport React from \"react\";\nimport {numberToDateString, numberToTimeString} from \"./Helper\";\n\nexport class Position {\n    constructor(pos) {\n        this.lt = pos.lt\n        this.lg = pos.lg\n        this.date = pos.da\n        this.time = pos.ti\n        this.id = pos.id\n    }\n\n    getMarker(problem, name, icons) {\n        return (\n\n            <Marker\n                key={this.id+name}\n                position={[this.lt, this.lg]}\n                icon={problem ? icons[1] : icons[0]}\n                riseOnHover={true}\n            >\n                <Popup>\n                    {this.popupText(name)}\n                </Popup>\n            </Marker>\n        )\n    }\n\n    popupText(name) {\n        return (\n            <span>\n            <center>{name}</center>\n            ({this.lt} , {this.lg}) <br/>\n            at {numberToDateString(this.date)} {numberToTimeString(this.time)}\n        </span>\n        )\n\n\n    }\n\n}\n\n\n\n\n","import {LayerGroup, Polyline, Popup} from \"react-leaflet\";\nimport {numberToDateString, numberToTimeString} from \"./Helper\";\nimport React from \"react\";\n\nexport class Person {\n    constructor(name) {\n        this.name = name;\n    }\n\n    polylines = [];\n    name = \"\";\n    /**\n     * @type {Position[]}\n     */\n    positions = []\n    markers = []\n    problems = []\n    color;\n    icons;\n    oldMarkers = [];\n    oldPolylines = [];\n\n\n    update(state) {\n        if (state.isShown === false) {\n            this.oldMarkers = this.markers;\n            this.oldPolylines = this.polylines;\n            this.markers = []\n            this.polylines = []\n            return;\n        }\n        if (state.isShown === true && this.oldMarkers.length !== 0) {\n            this.markers = this.oldMarkers;\n            this.polylines = this.oldPolylines;\n            return;\n        }\n\n        let lastPos = null\n        let tmpPolyline = [];\n        let pos;\n        this.markers = []\n        this.polylines = []\n        this.problems = []\n        if (!state.isShown) return;\n\n        for (pos of this.positions) {\n\n            if (!this.checkDate(pos, state)) continue;\n\n            let problem = false;\n            if (lastPos && this.checkProblem(pos, lastPos)) {\n                this.insertPolyline(tmpPolyline, pos)\n                tmpPolyline = [[lastPos.lt, lastPos.lg], [pos.lt, pos.lg]];\n                this.insertPolyline(tmpPolyline, pos, \"b\", true, lastPos)\n                tmpPolyline = []\n                problem = true;\n                this.problems.push([pos, lastPos])\n            }\n\n            tmpPolyline.push([pos.lt, pos.lg])\n            this.markers.push(pos.getMarker(problem, this.name, this.icons))\n            lastPos = pos\n        }\n        this.insertPolyline(tmpPolyline, pos, \"c\")\n    }\n\n    getLayerGroup() {\n        return (\n            <LayerGroup key={this.name}>\n                {this.markers}\n                {this.polylines}\n            </LayerGroup>)\n    }\n\n\n    /**\n     * checks if the time differance between two positions is more than 2 hours\n     * @param {Position} position the more recent position\n     * @param {Position} lastPos the previous position\n     * @return {Boolean} if there's a problem return true, false otherwise\n     */\n    checkProblem(position, lastPos) {\n        // combines pos.DA and pos.TI to make a Date object\n        let posDate = new Date(numberToDateString(position.date, 1) + \" \" + numberToTimeString(position.time));\n        let lastPosDate = new Date(numberToDateString(lastPos.date, 1) + \" \" + numberToTimeString(lastPos.time));\n\n        //diff contains the difference between the two positions in milliseconds\n        let diff = lastPosDate - posDate;\n        // contains the difference in minutes\n        diff = diff / 1000 / 60\n        return diff > 120;\n\n\n    }\n\n    /**\n     * takes a list of coordinates and inserts Polyline component to the polyline array\n     * @param {Array} tmpPolyline array containing coordinates\n     * @param {Position} pos\n     * @param ref a variable used to make sure that keys are unique\n     * @param {boolean} problem is the current polyline in a state of a problem?\n     * @param {Position} lastPos  last position\n     */\n    insertPolyline(tmpPolyline, pos, ref = \"a\", problem = false, lastPos = null) {\n        /** if array contains less than one item than it can't form a polyline */\n        if (tmpPolyline.length <= 1) return;\n\n        let obj, text\n        /** generates obj which contains information about the type of line\n         * and text which is the inner text if the popup\n         */\n        if (problem) {\n            obj = {color: 'red', dashArray: \"20,20\"}\n            text = <span>\n                <center>{this.name}</center>\n                ({pos.lt} , {pos.lg} ) => ({lastPos.lt} , {lastPos.lg})\n                <br/>\n                {\"(\" + numberToDateString(pos.date) + \" , \" + numberToTimeString(pos.time) +\n                \") => (\"\n                + numberToDateString(lastPos.date) + \" , \" + numberToTimeString(lastPos.time) + \")\"}\n            </span>\n\n        } else {\n            obj = {color: this.color};\n            text = <center>{this.name}</center>;\n        }\n\n        /** creates the Polyline and pushes it to the array */\n        this.polylines.push(\n            <Polyline\n                key={pos.id + ref}\n                pathOptions={obj}\n                positions={tmpPolyline}>\n                <Popup>\n                    {text}\n                </Popup>\n            </Polyline>\n        );\n\n    }\n\n    checkDate(pos, state) {\n        let date = new Date(numberToDateString(pos.date, 1));\n        return state.startDate <= date && date <= state.endDate;\n    }\n}","import {Form} from \"react-bootstrap\";\nimport {Component} from \"react\";\nimport {dateToString} from \"../classes/Helper\";\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div>\n\n                <div style={{display: \"flex\"}}>\n                    <Form.Check\n                        type=\"switch\"\n                        id=\"custom-switch\"\n                        checked={this.props.isChecked}\n                        onChange={() => {\n                            this.props.togglePerson(this.props.name);\n                        }}\n                    />\n                    <span>{this.props.name}</span>\n                </div>\n\n                <hr style={{width: \"25%\"}}/>\n\n                <div style={{\n                    marginTop: \"5px\",\n                    marginBottom: \"10px\"\n                }}>\n                    <strong>Date Filter:</strong>\n                    <br/>\n                    <span> from:\n                        <input\n                            type=\"date\"\n                            onChange={(e) => this.props.setDate(this.props.name,0,e.target.value)}\n                            value={(this.props.startDate).yyyymmdd()}\n                        />\n                    </span>\n                    <span style={{marginLeft: \"10px\"}}> to:\n                        <input\n                            type=\"date\"\n                            onChange={(e) => this.props.setDate(this.props.name,1,e.target.value)}\n                            value={(this.props.endDate).yyyymmdd()}\n                        />\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React from 'react';\nimport {numberToDateString, numberToTimeString} from \"../classes/Helper\";\nimport {Accordion, Table} from \"react-bootstrap\";\nfunction Info(props) {\n    let list = props.problems.map((key, index) => {\n        return (\n            <tr key={key[0].id+key[1].id}>\n                <td>{index+1}</td>\n                <td>{numberToDateString(key[0].date)} {numberToTimeString(key[0].time)}< /td>\n                <td>({key[0].lt} , {key[0].lg})</td>\n                <td>{numberToDateString(key[1].date)} {numberToTimeString(key[1].time)}</td>\n                <td>({key[1].lt} , {key[1].lg})</td>\n            </tr>\n        )\n    })\n\n\n    return (\n        <Accordion>\n            <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>Infractions ({list.length})</Accordion.Header>\n                <Accordion.Body>\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>time 1</th>\n                            <th>position 1</th>\n                            <th>time 2</th>\n                            <th>position 2</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {list}\n                        </tbody>\n                    </Table>\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"1\">\n                <Accordion.Header>SOS</Accordion.Header>\n                <Accordion.Body>\n                    abc\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    )\n\n}\n\nexport default Info;","import {Component} from \"react\";\nimport Filter from \"./Filter\";\nimport Info from \"./Info\";\n\nclass PersonPanel extends Component {\n    render() {\n        return (\n            <div style={{\n                padding: \"10px 3px\",\n                border: \"2px #7e8182 solid\",\n                marginTop: \"4px\"\n\n            }}>\n                <div>\n                    <Filter\n                        isChecked={this.props.checked}\n                        startDate={this.props.startDate}\n                        endDate={this.props.endDate}\n                        name={this.props.name}\n                        togglePerson={this.props.togglePerson}\n                        setDate={this.props.setDate}\n\n                    />\n                </div>\n                <Info problems={this.props.problems}/>\n\n\n            </div>\n        );\n    }\n}\n\nexport default PersonPanel;\n","import {Component} from \"react\";\nimport PersonPanel from \"./PersonPanel\";\n\nclass RightPanel extends Component {\n    render() {\n        let {peopleState} = this.props;\n        let {problems}=this.props\n        return (\n            <div style={{\n                overflowY: 'scroll',\n                height: '70vh',\n            }}>\n                {Object.keys(peopleState).map((key) => (\n                    <PersonPanel\n                        key={key}\n                        name={key}\n                        checked={peopleState[key].isShown}\n                        startDate={peopleState[key].startDate}\n                        endDate={peopleState[key].endDate}\n                        togglePerson={this.props.togglePerson}\n                        setDate={this.props.setDate}\n                        problems={problems[key]}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default RightPanel;\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Map from \"./Map\";\nimport {Container, Row} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Color, generateBoatIcon} from \"../classes/Helper\";\nimport {Position} from \"../classes/Position\";\nimport {Person} from \"../classes/Person\";\nimport RightPanel from \"./RightPanel\";\n\nDate.prototype.yyyymmdd = function () {\n    const mm = this.getMonth() + 1; // getMonth() is zero-based\n    const dd = this.getDate();\n\n    return [this.getFullYear(),\n        (mm > 9 ? '' : '0') + mm,\n        (dd > 9 ? '' : '0') + dd\n    ].join('-');\n};\n\nexport let usefulValues = [];\n\nlet peopleState = [];\nlet people = [];\n\nclass App extends Component {\n    state = {\n        peopleState: []\n    }\n\n\n    componentDidMount() {\n        console.log(\"start ComponentDidMount\", Date.now())\n        axios.get(\"/api\").then((res) => {\n                // people = []\n                console.log(\"start axios\", Date.now())\n                let colorGen = new Color();\n                for (let pos of res.data) {\n                    if (people[pos.na] === undefined) {\n                        people[pos.na] = new Person(pos.na)\n                        let color = colorGen.getNext()\n\n                        people[pos.na].icons = [generateBoatIcon(color), generateBoatIcon(color, \"red\")];\n                        people[pos.na].color = color\n\n                        peopleState[pos.na] = {\n                            isShown: true,\n                            startDate: new Date(\"2021-01-01\"),\n                            endDate: new Date(\"2022-01-01\"),\n                        }\n\n                    }\n                    people[pos.na].positions.push(new Position(pos))\n                }\n                console.log(people)\n                Object.values(people).map(person => person.update({\n                    isShown: true,\n                    startDate: new Date(\"2021-01-01\"),\n                    endDate: new Date(\"2022-01-01\"),\n                }))\n                this.setState({peopleState: peopleState})\n            }\n        )\n\n    }\n\n    /**\n     * The filter event handler function that shows or hides the layerGroup of one person\n     * @param {String} name the name of the person to hide or show\n     */\n    togglePerson(name) {\n        console.log(name)\n        let tmp = Object.assign({}, this.state.peopleState);\n        tmp[name].isShown = !tmp[name].isShown;\n\n        people[name].update(tmp[name]);\n        this.setState({peopleState: tmp});\n    }\n\n    setDate(name, type, a) {\n        let tmp = Object.assign({}, this.state.peopleState);\n        if (type === 0)\n            tmp[name].startDate = new Date(a);\n        else\n            tmp[name].endDate = new Date(a);\n        people[name].update(tmp[name])\n        this.setState({layerGroups: tmp})\n\n\n    }\n\n    render() {\n        console.log(\"start render\", Date.now())\n        /**\n         *\n         * @type {Person[]}\n         */\n        let problems = [];\n        Object.values(people).map((person) => {\n            problems[person.name] = person.problems\n        })\n\n\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Map people={people} peopleState={this.state.peopleState}/>\n                    </Row>\n                    <Row style={{padding: \"0!important\"}}>\n                        <RightPanel\n                            peopleState={peopleState}\n                            togglePerson={this.togglePerson.bind(this)}\n                            setDate={this.setDate.bind(this)}\n                            problems={problems}\n                        />\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
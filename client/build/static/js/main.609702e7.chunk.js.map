{"version":3,"sources":["components/MyLayers.js","components/Map.js","classes/Helper.js","classes/Position.js","classes/Person.js","components/Filter.js","components/Info.js","components/PersonPanel.js","components/RightPanel.js","components/App.js","index.js"],"names":["MyLayers","props","map","useMap","Object","values","people","forEach","person","peopleState","name","isShown","draw","window","screenfull","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","center","Map","console","log","Date","now","MapContainer","zoom","fullscreenControl","whenCreated","setMap","tileLayer","addTo","control","scale","imperial","generateBoatIcon","color","color2","divIcon","html","className","iconSize","iconAnchor","numberToDateString","date","type","substring","numberToTimeString","str","substr","Color","this","current","names","val","length","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","Position","pos","lt","lg","da","time","ti","id","tm","interval","problem","icons","marker","icon","riseOnHover","zIndexOffset","bindPopup","position","popupText","Person","SOSmarkers","sos","polylines","positions","markers","problems","layerGroup","allSOS","state","lastPos","tmpPolyline","checkDate","checkProblem","insertPolyline","push","getMarker","posDate","diff","obj","text","polylineText","dashArray","polyline","startDate","endDate","allPos","concat","arr","setInterval","hasLayer","removeLayer","addLayer","clearInterval","remove","getRandomInt","max","floor","random","Filter","temp","thermIcon","faThermometerThreeQuarters","faThermometerFull","faThermometerHalf","faThermometerQuarter","faThermometerEmpty","voltage","toPrecision","tempSys","style","display","Form","Check","checked","onChange","togglePerson","isAllPos","disabled","toggleAllPos","posCount","width","marginTop","marginBottom","paddingBottom","justifyContent","e","setDate","target","value","yyyymmdd","marginLeft","padding","size","marginRight","faMicrochip","faCarBattery","faPlug","Component","Info","problemList","key","index","sosList","Accordion","Item","eventKey","Header","Body","Table","striped","bordered","hover","PersonPanel","border","RightPanel","invalidateMap","debounce","invalidateSize","setMargin","document","getElementById","clientY","isToggled","widths","mapW","rightW","onClick","classList","toggle","onMouseMove","height","xmlns","viewBox","d","overflowY","keys","mm","getMonth","dd","getDate","getFullYear","join","App","debouncedCallback","axios","get","then","res","colorGen","data","undefined","na","getNext","update","setState","addEventListener","tmp","assign","undrawSOS","a","layerGroups","bind","ReactDOM","render","StrictMode"],"mappings":"uQAiBeA,MAbf,SAAkBC,GACd,IAAMC,EAAMC,cAQZ,OAPAC,OAAOC,OAAOJ,EAAMK,QAAQC,SAAQ,SAAAC,GAG5BP,EAAMQ,YAAYD,EAAOE,MAAMC,SAC3BH,EAAOI,KAAKV,EAAID,EAAMQ,YAAYD,EAAOE,UAG9C,M,sCCFXG,OAAOC,WAAaA,WAEbC,IAAEC,KAAKC,QAAQC,UAAUC,YAChCJ,IAAEC,KAAKC,QAAQG,aAAa,CACxBC,QAAS,iCACTC,cAAe,oCACfC,UAAW,qCAGf,IAAIC,EAAS,CAAC,kBAAmB,mBA0BlBC,MAxBf,SAAaxB,GAKT,OAHAyB,QAAQC,IAAI,mBAAoBC,KAAKC,OAIjC,eAACC,EAAA,EAAD,CACIN,OAAQA,EAAQO,KAAM,IAEtBC,mBAAmB,EACnBC,YAAa,SAAA/B,GACTD,EAAMiC,OAAOhC,GACba,IAAEoB,UAAU,uEAAwE,IAAIC,MAAMlC,GAC9Fa,IAAEoB,UAAU,wDAAwDC,MAAMlC,GAC1Ea,IAAEsB,QAAQC,MAAM,CAACC,UAAU,IAAQH,MAAMlC,IARjD,eAYI,cAAC,EAAD,CAAUI,OAAQL,EAAMK,OAAQG,YAAaR,EAAMQ,kB,MCtCxD,SAAS+B,IAAqD,IAApCC,EAAmC,uDAA3B,QAASC,EAAkB,uDAAT,QACvD,OAAO3B,IAAE4B,QAAQ,CACbC,KAAM,4PAOiGH,EAPjG,4oBAQmnBC,EARnnB,6BAUNG,UAAW,QACXC,SAAU,CAAC,EAAG,GACdC,WAAY,CAAC,GAAI,MAIlB,SAASC,EAAmBC,GAAiB,IAAXC,EAAU,uDAAH,EAC5C,OAAKA,EAGQ,IAATA,EACOD,EAAKE,UAAU,EAAG,GAAK,IAAMF,EAAKE,UAAU,EAAG,GAAK,IAAMF,EAAKE,UAAU,EAAG,QADvF,EAFWF,EAAKE,UAAU,EAAG,GAAK,IAAMF,EAAKE,UAAU,EAAG,GAAK,IAAMF,EAAKE,UAAU,EAAG,GAOpF,SAASC,EAAmBC,GAC/B,OAAOA,EAAIC,OAAO,EAAG,GAAK,IAAMD,EAAIC,OAAO,EAAG,GAa3C,IAAMC,EAAb,WACI,aAAe,oBACXC,KAAKC,QAAU,EACfD,KAAKE,MAAQ,CACT,UAAW,UAAW,UAAW,UACjC,UAAU,UAAY,UAAU,UAChC,UAAW,UAAW,UAAW,UACjC,UAAW,UACX,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UACtB,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UACtB,UAAW,UAAW,UAAW,UAChC,UAAW,UACZ,UAAW,WAdvB,2CAkBI,WACI,IAAIC,EAAMH,KAAKE,MAAMF,KAAKC,SAG1B,OAFAD,KAAKC,UACLD,KAAKC,SAAWD,KAAKE,MAAME,OACpBD,IAtBf,2BAyBI,SAAclB,EAAOoB,GACjB,IAAIC,EAAIC,SAAStB,EAAMuB,MAAM,GAAI,IAAKC,EAAIJ,EAAU,EAAI,EAAI,IAAKK,EAAIL,EAAU,GAAe,EAAXA,EAAeA,EAC9FM,EAAIL,GAAK,GAAIM,EAAIN,GAAK,EAAI,IAAQO,EAAQ,IAAJP,EAC1C,MAAO,KAAO,SAA4C,OAA/BQ,KAAKC,OAAON,EAAIE,GAAKD,GAAKC,GAA+C,KAA/BG,KAAKC,OAAON,EAAIG,GAAKF,GAAKE,IAAcE,KAAKC,OAAON,EAAII,GAAKH,GAAKG,IAAIG,SAAS,IAAIR,MAAM,OA5BtK,KCxCO,IAAMS,EAAb,WACI,WAAYC,GAAM,oBACdlB,KAAKmB,GAAKD,EAAIC,GACdnB,KAAKoB,GAAKF,EAAIE,GACdpB,KAAKP,KAAOyB,EAAIG,GAChBrB,KAAKsB,KAAOJ,EAAIK,GAChBvB,KAAKwB,GAAKN,EAAIM,GACdxB,KAAKyB,GAAa,QAATP,EAAIO,GACbzB,KAAK0B,UAAU,EARvB,6CAWI,SAAUC,EAASzE,EAAM0E,GACrB,OAAOrE,IAAEsE,OAAO,CAAC7B,KAAKmB,GAAInB,KAAKoB,IAAK,CAChCU,KAAOH,GAAW3B,KAAKyB,GAAMG,EAAM,GAAKA,EAAM,GAC9CG,aAAa,EACbC,aAAehC,KAAKyB,GAAK,IAAM,IAChCQ,UDcJ,SAAmBC,EAAUhF,GAChC,KADgD,yDAE5C,MAAO,iCAAmCA,EACtC,QAAUgF,EAASf,GAAK,MAAQe,EAASd,GADtC,QAEM5B,EAAmB0C,EAASzC,MAAQ,OAASG,EAAmBsC,EAASZ,MAClF,OCnBSa,CAAUnC,KAAM9C,QAhBrC,KCAakF,EAAb,WAKI,WAAYlF,GAAO,yBAJnBmF,WAAa,GAIK,KAFlBC,IAAM,GAEY,KAIlBC,UAAY,GAJM,KAKlBrF,KAAO,GALW,KASlBsF,UAAY,GATM,KAUlBC,QAAU,GAVQ,KAWlBC,SAAW,GAXO,KAYlBC,WAAapF,IAAEoF,aAZG,KAelBC,OAAO,GAdH5C,KAAK9C,KAAOA,EANpB,0CAuBI,SAAO2F,GAEH,IAEI3B,EAFA4B,EAAU,KACVC,EAAc,GAMlB,GAJA/C,KAAKyC,QAAU,GACfzC,KAAKuC,UAAY,GACjBvC,KAAK0C,SAAW,GAChB1C,KAAKqC,WAAa,GACbQ,EAAM1F,QAAX,CATU,oBAWE6C,KAAKwC,WAXP,IAWV,2BAEI,GAFCtB,EAAuB,QAEnBlB,KAAKgD,UAAU9B,EAAK2B,GAAzB,CAEA,IAAIlB,GAAU,EACVmB,GAAW9C,KAAKiD,aAAa/B,EAAK4B,KAClC9C,KAAKkD,eAAeH,EAAa7B,GACjC6B,EAAc,CAAC,CAACD,EAAQ3B,GAAI2B,EAAQ1B,IAAK,CAACF,EAAIC,GAAID,EAAIE,KACtDpB,KAAKkD,eAAeH,EAAa7B,EAAK,KAAK,EAAM4B,GACjDC,EAAc,GACdpB,GAAU,EACV3B,KAAK0C,SAASS,KAAK,CAACjC,EAAK4B,KAG7BC,EAAYI,KAAK,CAACjC,EAAIC,GAAID,EAAIE,KAC1BF,EAAIO,GACJzB,KAAK4C,OAAOO,KAAK,CAACjC,EAAIkC,UAAUzB,EAAS3B,KAAK9C,KAAM8C,KAAK4B,OAAQV,IAEjElB,KAAKyC,QAAQU,KAAKjC,EAAIkC,UAAUzB,EAAS3B,KAAK9C,KAAM8C,KAAK4B,QAC7DkB,EAAU5B,GA9BJ,8BAgCVlB,KAAKkD,eAAeH,EAAa7B,EAAK,KAClClB,KAAK4C,OAAOxC,OAAO,IACnBJ,KAAKqC,WAAW,CAACrC,KAAK4C,OAAO,QAzDzC,0BAqEI,SAAaV,EAAUY,GAEnB,IAAIO,EAAU,IAAIjF,KAAKoB,EAAmB0C,EAASzC,KAAM,GAAK,IAAMG,EAAmBsC,EAASZ,OAI5FgC,EAHc,IAAIlF,KAAKoB,EAAmBsD,EAAQrD,KAAM,GAAK,IAAMG,EAAmBkD,EAAQxB,OAGzE+B,EAGzB,OADAC,EAAOA,EAAO,IAAO,IACP,MA9EtB,4BA2FI,SAAeP,EAAa7B,GAAkD,IAAD,OAAjCS,EAAiC,wDAAhBmB,EAAgB,uDAAN,KAEnE,KAAIC,EAAY3C,QAAU,GAA1B,CAEA,IAAImD,EAAKC,EAELC,EAAe,SAACvC,GAA0C,IAArCS,EAAoC,wDAAnBmB,EAAmB,uDAAT,KAChD,OAAInB,EACO,EAAKzE,KAAO,IAAMsC,EAAmBsD,EAAQrD,MAAQ,IAAMG,EAAmBkD,EAAQxB,MAAQ,OACjG9B,EAAmB0B,EAAIzB,MAAQ,IAAMG,EAAmBsB,EAAII,MAE7D,+CAMPK,GACA4B,EAAM,CAACtE,MAAO,MAAOyE,UAAW,SAChCF,EAAOC,EAAavC,EAAKS,EAASmB,KAIlCS,EAAM,CAACtE,MAAOe,KAAKf,OACnBuE,EAAOC,EAAavC,IAIxBlB,KAAKuC,UAAUY,KACX5F,IAAEoG,SAASZ,EAAaQ,GAAKtB,UAAUuB,OAxHnD,uBA6HI,SAAUtC,EAAK2B,GACX,IAAIpD,EAAO,IAAIrB,KAAKoB,EAAmB0B,EAAIzB,KAAM,IACjD,OAAOoD,EAAMe,WAAanE,GAAQA,GAAQoD,EAAMgB,UA/HxD,kBAkII,SAAKnH,EAAKmG,GACFA,EAAMiB,QACN9D,KAAK2C,WAAapF,IAAEoF,WAAW3C,KAAKuC,UAAUwB,OAAO/D,KAAKyC,UAC1DzC,KAAK2C,WAAW/D,MAAMlC,IACfsD,KAAKyC,QAAQrC,OAAS,IAC7BJ,KAAK2C,WAAapF,IAAEoF,WAAW,CAAC3C,KAAKyC,QAAQ,KAC7CzC,KAAK2C,WAAW/D,MAAMlC,IAI1BsD,KAAKqC,WAAWtF,SAAQ,SAAAiH,GACpB,IAAInC,EAASmC,EAAI,GACb9C,EAAM8C,EAAI,GACO,IAAjB9C,EAAIQ,WAAoC,IAAlBR,EAAIQ,WAC1BR,EAAIQ,SAAWuC,aAAY,WACnBvH,EAAIwH,SAASrC,GACbnF,EAAIyH,YAAYtC,GAEhBnF,EAAI0H,SAASvC,KAElB,WAtJnB,uBA2JI,WACI7B,KAAKqC,WAAWtF,SAAQ,SAAAiH,GACpB,IAAInC,EAASmC,EAAI,GACb9C,EAAM8C,EAAI,GACdK,cAAcnD,EAAIQ,UAClBG,EAAOyC,SACPpD,EAAIQ,SAAW,SAjK3B,K,wBCWA,SAAS6C,EAAaC,GAClB,OAAO1D,KAAK2D,MAAM3D,KAAK4D,SAAWF,G,IA8GvBG,E,kDAtGX,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IACDmI,KAAOL,EAAa,KACzB,EAAKM,UAAYC,IACb,EAAKF,KAAO,GACZ,EAAKC,UAAYE,IACZ,EAAKH,KAAO,GACjB,EAAKC,UAAYC,IACZ,EAAKF,KAAO,GACjB,EAAKC,UAAYG,IACZ,EAAKJ,KAAO,GACjB,EAAKC,UAAYI,IAEjB,EAAKJ,UAAYK,IAErB,EAAKC,SAASZ,EAAa,IAAI,GAAGzD,KAAK4D,UAAUU,YAAY,GAC7D,EAAKC,QAAQd,EAAa,IAhBX,E,0CAmBnB,WAAU,IAAD,OAEL,OACI,gCAEI,+BAAOvE,KAAKvD,MAAMS,OAClB,gCACI,sBAAKoI,MAAO,CAACC,QAAS,QAAtB,UACI,cAACC,EAAA,EAAKC,MAAN,CACI/F,KAAK,SACLgG,QAAS1F,KAAKvD,MAAMU,QACpBwI,SAAU,WACN,EAAKlJ,MAAMmJ,aAAa,EAAKnJ,MAAMS,SAE3C,2CAEJ,sBAAKoI,MAAO,CAACC,QAAS,QAAtB,UACI,cAACC,EAAA,EAAKC,MAAN,CACI/F,KAAK,SACLgG,QAAS1F,KAAKvD,MAAMoJ,SACpBC,UAAW9F,KAAKvD,MAAMU,QACtBwI,SAAU,WACN,EAAKlJ,MAAMsJ,aAAa,EAAKtJ,MAAMS,SAE3C,6CAAgB8C,KAAKvD,MAAMuJ,SAA3B,aAKR,oBAAIV,MAAO,CAACW,MAAO,SAEnB,sBAAKX,MAAO,CACRY,UAAW,MACXC,aAAc,QAFlB,UAII,wBAAQb,MAAO,CAACc,cAAe,QAA/B,0BACA,uBACA,sBAAKd,MAAO,CAACC,QAAS,OAAQc,eAAgB,gBAA9C,UACI,0CACA,uBACI3G,KAAK,OACLiG,SAAU,SAACW,GAAD,OAAO,EAAK7J,MAAM8J,QAAQ,EAAK9J,MAAMS,KAAM,EAAGoJ,EAAEE,OAAOC,QACjEA,MAAQzG,KAAKvD,MAAMmH,UAAW8C,gBAGlC,uBAAMpB,MAAO,CAACqB,WAAY,QAA1B,iBACA,uBACIjH,KAAK,OACLiG,SAAU,SAACW,GAAD,OAAO,EAAK7J,MAAM8J,QAAQ,EAAK9J,MAAMS,KAAM,EAAGoJ,EAAEE,OAAOC,QACjEA,MAAQzG,KAAKvD,MAAMoH,QAAS6C,sBAMxC,sBAAKpB,MAAO,CAACC,QAAS,OAAQc,eAAgB,gBAAiBO,QAAS,QAAxE,UACI,gCACI,cAAC,IAAD,CAAiB9E,KAAM9B,KAAK6E,UAAWgC,KAAK,OAC5C,sBAAMvB,MAAO,CAACwB,YAAa,UAC1B9G,KAAK4E,KAHV,WAKA,gCACI,cAAC,IAAD,CAAiB9C,KAAMiF,IAAaF,KAAK,OACzC,sBAAMvB,MAAO,CAACwB,YAAa,UAC1B9G,KAAKqF,QAHV,WAKA,gCACI,cAAC,IAAD,CAAiBvD,KAAMkF,IAAcH,KAAK,OAC1C,sBAAMvB,MAAO,CAACwB,YAAa,UAF/B,UAGY9G,KAAKmF,QAHjB,QAKA,gCACI,cAAC,IAAD,CAAiBrD,KAAMmF,IAAQJ,KAAK,OACpC,sBAAMvB,MAAO,CAACwB,YAAa,UAF/B,2B,GAhGCI,a,gBCoDNC,MAjEf,SAAc1K,GACV,IAAI2K,EAAc3K,EAAMiG,SAAShG,KAAI,SAAC2K,EAAKC,GACvC,OACI,+BACI,6BAAKA,EAAQ,IACb,+BAAK9H,EAAmB6H,EAAI,GAAG5H,MAA/B,IAAuCG,EAAmByH,EAAI,GAAG/F,SACjE,mCAAM+F,EAAI,GAAGlG,GAAb,MAAoBkG,EAAI,GAAGjG,GAA3B,OACA,+BAAK5B,EAAmB6H,EAAI,GAAG5H,MAA/B,IAAuCG,EAAmByH,EAAI,GAAG/F,SACjE,mCAAM+F,EAAI,GAAGlG,GAAb,MAAoBkG,EAAI,GAAGjG,GAA3B,SALKiG,EAAI,GAAG7F,GAAK6F,EAAI,GAAG7F,OAShC+F,EAAU9K,EAAM6F,IAAI5F,KAAI,SAACwE,EAAKoG,GAC9B,OAAQ,+BACJ,6BAAKA,EAAQ,IACb,+BAAK9H,EAAmB0B,EAAIzB,MAA5B,IAAoCG,EAAmBsB,EAAII,SAC3D,mCAAMJ,EAAIC,GAAV,MAAiBD,EAAIE,GAArB,SAHaF,EAAIM,OASzB,OACI,eAACgG,EAAA,EAAD,WACI,eAACA,EAAA,EAAUC,KAAX,CAAgBC,SAAS,IAAzB,UACI,eAACF,EAAA,EAAUG,OAAX,2BAAgCP,EAAYhH,OAA5C,OACA,cAACoH,EAAA,EAAUI,KAAX,UACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACA,+BACI,mCACA,wCACA,4CACA,wCACA,iDAGJ,gCACCZ,YAKb,eAACI,EAAA,EAAUC,KAAX,CAAgBC,SAAS,IAAzB,UACI,eAACF,EAAA,EAAUG,OAAX,mBAAwBJ,EAAQnH,OAAhC,OACA,cAACoH,EAAA,EAAUI,KAAX,UACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACA,+BACI,mCACA,sCACA,+CAGJ,gCACCT,gBCvDnBU,E,4JACF,WACI,OACI,sBAAK3C,MAAO,CACRsB,QAAS,WACTsB,OAAQ,oBACRhC,UAAW,OAHf,UAMI,8BACI,cAAC,EAAD,CACI/I,QAAS6C,KAAKvD,MAAMU,QACpB0I,SAAU7F,KAAKvD,MAAMqH,OACrBF,UAAW5D,KAAKvD,MAAMmH,UACtBC,QAAS7D,KAAKvD,MAAMoH,QACpB3G,KAAM8C,KAAKvD,MAAMS,KAEjB0I,aAAc5F,KAAKvD,MAAMmJ,aACzBG,aAAc/F,KAAKvD,MAAMsJ,aACzBQ,QAASvG,KAAKvD,MAAM8J,QACnBP,SAAUhG,KAAKvD,MAAMuJ,aAI9B,cAAC,EAAD,CAAMtD,SAAU1C,KAAKvD,MAAMiG,SAC3BJ,IAAKtC,KAAKvD,MAAM6F,a,GAzBN4E,aAoCXe,I,iBCpCTE,E,4MACFC,cAAgBC,KAAS,kBAAM,EAAK5L,MAAMC,IAAI4L,mBAAkB,K,EAChEC,UAAYF,KAAS,SAAC/B,GAAD,OAAOkC,SAASC,eAAe,QAAQnD,MAAMY,UAAYI,EAAEoC,QAAU,GAAK,OAAM,K,EACrGC,WAAY,E,4CAEZ,WAAU,IAAD,OACL,EAAkC3I,KAAKvD,MAAlCmM,EAAL,EAAKA,OAAOlG,EAAZ,EAAYA,SAASzF,EAArB,EAAqBA,YACjB4L,EAAKD,EAAO,GACZE,EAAOF,EAAO,GAClB,OAEI,sBAAKtD,MAAO,CAACC,QAAS,QAAtB,UACI,qBAAK/D,GAAG,IAAI8D,MAAO,CAACW,MAAO,OACtB8C,QAAS,WACA,EAAKJ,WAKNH,SAASC,eAAe,kBAAkBnD,MAAMW,MAAQ,OACxDuC,SAASC,eAAe,UAAUnD,MAAMW,MAAQ4C,EAChDL,SAASC,eAAe,iBAAiBnD,MAAMW,MAAQ6C,IANvDN,SAASC,eAAe,kBAAkBnD,MAAMW,MAAQ,IACxDuC,SAASC,eAAe,UAAUnD,MAAMW,MAAQ,OAChDuC,SAASC,eAAe,iBAAiBnD,MAAMW,MAAQ,OAM3DuC,SAASC,eAAe,UAAUO,UAAUC,OAAO,UACnD/K,QAAQC,IAAI,+BAAgC,EAAK1B,MAAMC,KACvD,EAAK0L,gBACL,EAAKO,WAAa,EAAKA,WAI3BO,YAAa,SAAC5C,GAAD,OAAK,EAAKiC,UAAUjC,IAlBtC,SAqBI,qBAAK9E,GAAI,OAAT,SACI,+BACI,qBAAK8D,MAAO,CAACW,MAAO,OAAQkD,OAAQ,QAApC,SAEI,qBAAK3H,GAAG,SAAS4H,MAAM,6BAA6BnD,MAAM,OAAOkD,OAAO,OACnEE,QAAQ,YADb,SAEI,sBACIC,EAAE,2LAO1B,qBACI9H,GAAG,iBACH8D,MAAO,CACHiE,UAAW,SACXJ,OAAQ,QACRlD,MAAO,QALf,SAOKrJ,OAAO4M,KAAKvM,GAAaP,KAAI,SAAC2K,GAAD,OAC1B,cAAC,EAAD,CAEInK,KAAMmK,EACNlK,QAASF,EAAYoK,GAAKlK,QAC1B2G,OAAQ7G,EAAYoK,GAAKvD,OACzBF,UAAW3G,EAAYoK,GAAKzD,UAC5BC,QAAS5G,EAAYoK,GAAKxD,QAC1B+B,aAAc,EAAKnJ,MAAMmJ,aACzBG,aAAc,EAAKtJ,MAAMsJ,aACzBQ,QAAS,EAAK9J,MAAM8J,QACpB7D,SAAUA,EAAS2E,GACnB/E,IAAK,EAAK7F,MAAM6F,IAAI+E,GACpBrB,SAAU,EAAKvJ,MAAMuJ,SAASqB,IAXzBA,e,GAxDRH,aA6EViB,ICvEf/J,KAAKV,UAAUgJ,SAAW,WACtB,IAAM+C,EAAKzJ,KAAK0J,WAAa,EACvBC,EAAK3J,KAAK4J,UAEhB,MAAO,CAAC5J,KAAK6J,eACRJ,EAAK,EAAI,GAAK,KAAOA,GACrBE,EAAK,EAAI,GAAK,KAAOA,GACxBG,KAAK,MAGJ,IAEH7M,EAAc,GACdH,EAAS,GAEPiN,E,4MACFlH,MAAQ,CACJ5F,YAAa,I,EAGjB+M,kBAAoB3B,KAAS,WACzB,EAAK3L,IAAI4L,iBACT,EAAKQ,OAASN,SAASC,eAAe,iBAAiBnD,MAAMW,MAC7D,EAAK4C,KAAOL,SAASC,eAAe,UAAUnD,MAAMW,QACrD,K,EACH4C,KAAO,O,EACPC,OAAS,O,EAyETpM,IAAM,G,uDAvEN,WAAqB,IAAD,OAChBwB,QAAQC,IAAI,0BAA2BC,KAAKC,OAC5C2B,KAAK8I,OAASN,SAASC,eAAe,iBAAiBnD,MAAMW,MAC7DjG,KAAK6I,KAAOL,SAASC,eAAe,UAAUnD,MAAMW,MACpDgE,IAAMC,IAAI,QAAQC,MAAK,SAACC,GAEhBlM,QAAQC,IAAI,cAAeC,KAAKC,OAChC,IAHwB,EAGpBgM,EAAW,IAAItK,EAHK,cAIRqK,EAAIE,MAJI,IAIxB,2BAA0B,CAAC,IAAlBpJ,EAAiB,QACtB,QAAuBqJ,IAAnBzN,EAAOoE,EAAIsJ,IAAmB,CAC9B1N,EAAOoE,EAAIsJ,IAAM,IAAIpI,EAAOlB,EAAIsJ,IAChC,IAAIvL,EAAQoL,EAASI,UAErB3N,EAAOoE,EAAIsJ,IAAI5I,MAAQ,CAAC5C,EAAiBC,GAAQD,EAAiBC,EAAO,QACzEnC,EAAOoE,EAAIsJ,IAAIvL,MAAQA,EAEvBhC,EAAYiE,EAAIsJ,IAAM,CAClBrN,SAAS,EACT2G,QAAQ,EACRF,UAAW,IAAIxF,KAAK,cACpByF,QAAS,IAAIzF,KAAK,eAI1BtB,EAAOoE,EAAIsJ,IAAIhI,UAAUW,KAAK,IAAIlC,EAASC,KApBvB,8BAsBxBtE,OAAOC,OAAOC,GAAQJ,KAAI,SAAAM,GAAM,OAAIA,EAAO0N,OAAOzN,EAAYD,EAAOE,UACrE,EAAKyN,SAAS,CAAC1N,YAAaA,OAIpCI,OAAOuN,iBAAiB,UAAU,WAC9B,EAAKZ,yB,0BAQb,SAAa9M,GACT,IAAI2N,EAAMjO,OAAOkO,OAAO,GAAI9K,KAAK6C,MAAM5F,aACvC4N,EAAI3N,GAAMC,SAAW0N,EAAI3N,GAAMC,QAC/BL,EAAOI,GAAMyF,WAAW2B,SACxBxH,EAAOI,GAAM6N,YAEb/K,KAAK2K,SAAS,CAAC1N,YAAa4N,M,0BAGhC,SAAa3N,GACT,IAAI2N,EAAMjO,OAAOkO,OAAO,GAAI9K,KAAK6C,MAAM5F,aACvC4N,EAAI3N,GAAM4G,QAAU+G,EAAI3N,GAAM4G,OAC9BhH,EAAOI,GAAMyF,WAAW2B,SAExBtE,KAAK2K,SAAS,CAAC1N,YAAa4N,M,qBAGhC,SAAQ3N,EAAMwC,EAAMsL,GAChB,IAAIH,EAAMjO,OAAOkO,OAAO,GAAI9K,KAAK6C,MAAM5F,aAC1B,IAATyC,EACAmL,EAAI3N,GAAM0G,UAAY,IAAIxF,KAAK4M,GAE/BH,EAAI3N,GAAM2G,QAAU,IAAIzF,KAAK4M,GACjClO,EAAOI,GAAMyF,WAAW2B,SACxBxH,EAAOI,GAAM6N,YACbjO,EAAOI,GAAMwN,OAAOG,EAAI3N,IACxB8C,KAAK2K,SAAS,CAACM,YAAaJ,M,oBAOhC,SAAOnO,GACHsD,KAAKtD,IAAMA,I,oBAGf,WACIwB,QAAQC,IAAI,eAAgBC,KAAKC,OAKjC,IAAIqE,EAAW,GACXJ,EAAM,GACN0D,EAAW,GAUf,OATApJ,OAAOC,OAAOC,GAAQC,SAAQ,SAACC,GAC3B0F,EAAS1F,EAAOE,MAAQF,EAAO0F,SAC/B,IAAImI,EACJA,EAAM7N,EAAO4F,OAAOlG,KAAI,SAAAsH,GAAG,OAAIA,EAAI,MACnC1B,EAAItF,EAAOE,MAAQ2N,EACnB7E,EAAShJ,EAAOE,MAAQF,EAAOyF,QAAQrC,UAKvC,sBAAKoB,GAAI,OAAT,UACI,qBAAKA,GAAG,SAAR,SAEI,cAAC,EAAD,CAAKA,GAAG,QACH1E,OAAQA,EACRG,YAAa+C,KAAK6C,MAAM5F,YACxByB,OAAQsB,KAAKtB,OAAOwM,KAAKlL,UAIlC,qBAAKwB,GAAG,gBAAR,SACI,cAAC,EAAD,CACIoH,OAAQ,CAAC5I,KAAK6I,KAAM7I,KAAK8I,QACzBpM,IAAKsD,KAAKtD,IACVO,YAAaA,EACb2I,aAAc5F,KAAK4F,aAAasF,KAAKlL,MACrCuG,QAASvG,KAAKuG,QAAQ2E,KAAKlL,MAC3B+F,aAAc/F,KAAK+F,aAAamF,KAAKlL,MACrC0C,SAAUA,EACVJ,IAAKA,EACL0D,SAAUA,a,GAjIhBkB,aAyIH6C,IC9JfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAASC,eAAe,W","file":"static/js/main.609702e7.chunk.js","sourcesContent":["import {useMap} from \"react-leaflet\";\n\n\n\nfunction MyLayers(props) {\n    const map = useMap();\n    Object.values(props.people).forEach(person => {\n\n        //TODO:check for changed boats only\n        if (props.peopleState[person.name].isShown) {\n                person.draw(map,props.peopleState[person.name]);\n        }\n    })\n    return null\n\n}\n\nexport default MyLayers;\n","import {MapContainer,} from \"react-leaflet\";\nimport React from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../css/styles.css\";\nimport MyLayers from \"./MyLayers\";\n\nimport \"leaflet.fullscreen/Control.FullScreen\";\nimport \"leaflet.fullscreen/Control.FullScreen.css\";\nimport screenfull from 'screenfull';\n\nwindow.screenfull = screenfull;\n//default icons fix\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconUrl: \"/static/images/marker-icon.png\",\n    iconRetinaUrl: \"/static/images/marker-icon-2x.png\",\n    shadowUrl: \"/static/images/marker-shadow.png\",\n});\n\nlet center = [36.08851338894426, 10.80333970970808];\n\nfunction Map(props) {\n\n    console.log(\"start render Map\", Date.now())\n\n\n    return (\n        <MapContainer\n            center={center} zoom={7.8}\n            // scrollWheelZoom={false}\n            fullscreenControl={true}\n            whenCreated={map => {\n                props.setMap(map)\n                L.tileLayer(\"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg\", {}).addTo(map)\n                L.tileLayer(\"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\").addTo(map);\n                L.control.scale({imperial: false}).addTo(map);\n            }}\n        >\n            />\n            <MyLayers people={props.people} peopleState={props.peopleState}/>\n        </MapContainer>\n    );\n\n}\n\nexport default Map;\n","import L from 'leaflet'\n\nexport function generateBoatIcon(color = \"black\", color2 = \"black\") {\n    return L.divIcon({\n        html: `<svg \n height=\"24\"\n  viewBox=\"0 0 512 512\"\n   width=\"24\"\n   preserveAspectRatio=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <g>\n    <path d=\"m90.997 364.003h119.998v-216.821l-132.375 193.347c-6.805 9.94.33 23.474 12.377 23.474z\" fill=\"` + color + `\"> </path>\n    <path d=\"m488.49 391.572h-224.999v-27.569h149.997c8.28 0 15-6.72 15-15 0-45.429-9.19-87.148-27.32-124.008-29.039-59.049-81.459-104.268-137.677-127.378v-82.608c0-10.61-10.75-17.85-20.55-13.93-.05.02-.09.04-.14.05-4.03 1.66-89.908 36.969-90.008 37.009-12.31 5.06-12.39 22.51-.13 27.69l80.829 34.129v291.615h-209.994c-9.217 0-16.388 8.233-14.803 17.86 16.103 105.627 13.38 87.765 13.693 89.818 1.112 7.331 7.414 12.75 14.83 12.75h335.291c51.636 0 97.805-29.107 120.101-73.312.075.006.152.007.227.013 4.44-8.93 7.89-18.39 10.24-28.21 2.365-9.88-4.925-18.919-14.587-18.919zm-224.999-248.235c40.059 49.959 40.119 120.338 0 170.367z\" fill=\"` + color2 + `\" ></path>\n    </g></svg>`,\n        className: \"dummy\",\n        iconSize: [0, 0],\n        iconAnchor: [12, 12],\n    });\n}\n\nexport function numberToDateString(date, type = 0) {\n    if (!type) {\n        return date.substring(6, 8) + '/' + date.substring(4, 6) + '/' + date.substring(0, 4);\n    }\n    if (type === 1) {\n        return date.substring(0, 4) + '-' + date.substring(4, 6) + '-' + date.substring(6, 8);\n    }\n}\n\nexport function numberToTimeString(str) {\n    return str.substr(0, 2) + ':' + str.substr(2, 2)\n}\n\nexport function popupText(position, name, type = 1) {\n    if (type)\n        return '<p style=\"text-align:center;\">' + name +\n            '<br>(' + position.lt + ' , ' + position.lg + ')' +\n            '<br>' + numberToDateString(position.date) + \" at \" + numberToTimeString(position.time) +\n            '</p>'\n\n}\n\n\nexport class Color {\n    constructor() {\n        this.current = 0;\n        this.names = [\n            \"#00ffff\", \"#ff00ff\", \"#ffff00\", \"#ffffff\",\n            \"#ffb6c1\",\"#ffa500\",  \"#00ff00\",\"#bdb76b\",\n            \"#00008b\", \"#008b8b\", \"#a9a9a9\", \"#006400\",\n            \"#9932cc\", \"#e9967a\",\n            \"#add8e6\", \"#e0ffff\", \"#90ee90\", \"#d3d3d3\",\n            \"#808000\", \"#ffc0cb\", \"#800080\",\n            \"#00ff00\", \"#0000ff\", \"#f0ffff\", \"#f5f5dc\",\n            \"#8b008b\", \"#556b2f\", \"#ff8c00\",\n            \"#ffd700\", \"#008000\", \"#4b0082\", \"#f0e68c\",\n             \"#ffffe0\", \"#000080\",\n            \"#800080\", \"#c0c0c0\",\n        ]\n    }\n\n    getNext() {\n        let val = this.names[this.current];\n        this.current++;\n        this.current %= this.names.length;\n        return val\n    }\n\n    shadeHexColor(color, percent) {\n        var f = parseInt(color.slice(1), 16), t = percent < 0 ? 0 : 255, p = percent < 0 ? percent * -1 : percent,\n            R = f >> 16, G = f >> 8 & 0x00FF, B = f & 0x0000FF;\n        return \"#\" + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n    }\n\n}\n\n/**\n *\n * @param {Date} date\n * @returns {number|string|*}\n * @constructor\n */\nexport function dateToString(date) {\n}","import {popupText} from \"./Helper\";\nimport L from \"leaflet\"\n\nexport class Position {\n    constructor(pos) {\n        this.lt = pos.lt\n        this.lg = pos.lg\n        this.date = pos.da\n        this.time = pos.ti\n        this.id = pos.id\n        this.tm= pos.tm===\"DIs\";\n        this.interval=-1;\n    }\n\n    getMarker(problem, name, icons) {\n        return L.marker([this.lt, this.lg], {\n            icon: (problem || this.tm) ? icons[1] : icons[0],\n            riseOnHover: true,\n            zIndexOffset: (this.tm)? 100 : 0\n        }).bindPopup(popupText(this, name))\n\n    }\n\n\n}\n\n\n\n\n","import {numberToDateString, numberToTimeString} from \"./Helper\";\nimport L from \"leaflet\"\n\nexport class Person {\n    SOSmarkers = [];\n\n    sos = [];\n\n    constructor(name) {\n        this.name = name;\n    }\n\n    polylines = [];\n    name = \"\";\n    /**\n     * @type {Position[]}\n     */\n    positions = []\n    markers = []\n    problems = []\n    layerGroup = L.layerGroup();\n    color;\n    icons;\n    allSOS=[]\n\n\n    update(state) {\n\n        let lastPos = null\n        let tmpPolyline = [];\n        let pos;\n        this.markers = []\n        this.polylines = []\n        this.problems = []\n        this.SOSmarkers = []\n        if (!state.isShown) return;\n\n        for (pos of this.positions) {\n\n            if (!this.checkDate(pos, state)) continue;\n\n            let problem = false;\n            if (lastPos && this.checkProblem(pos, lastPos)) {\n                this.insertPolyline(tmpPolyline, pos)\n                tmpPolyline = [[lastPos.lt, lastPos.lg], [pos.lt, pos.lg]];\n                this.insertPolyline(tmpPolyline, pos, \"b\", true, lastPos)\n                tmpPolyline = []\n                problem = true;\n                this.problems.push([pos, lastPos])\n            }\n\n            tmpPolyline.push([pos.lt, pos.lg])\n            if (pos.tm) {\n                this.allSOS.push([pos.getMarker(problem, this.name, this.icons), pos])\n            } else\n                this.markers.push(pos.getMarker(problem, this.name, this.icons))\n            lastPos = pos\n        }\n        this.insertPolyline(tmpPolyline, pos, \"c\")\n        if (this.allSOS.length>0)\n            this.SOSmarkers=[this.allSOS[0]]\n\n\n    }\n\n\n    /**\n     * checks if the time differance between two positions is more than 2 hours\n     * @param {Position} position the more recent position\n     * @param {Position} lastPos the previous position\n     * @return {Boolean} if there's a problem return true, false otherwise\n     */\n    checkProblem(position, lastPos) {\n        // combines pos.DA and pos.TI to make a Date object\n        let posDate = new Date(numberToDateString(position.date, 1) + \" \" + numberToTimeString(position.time));\n        let lastPosDate = new Date(numberToDateString(lastPos.date, 1) + \" \" + numberToTimeString(lastPos.time));\n\n        //diff contains the difference between the two positions in milliseconds\n        let diff = lastPosDate - posDate;\n        // contains the difference in minutes\n        diff = diff / 1000 / 60\n        return diff > 120;\n\n\n    }\n\n    /**\n     * takes a list of coordinates and inserts Polyline component to the polyline array\n     * @param {Array} tmpPolyline array containing coordinates\n     * @param {Position} pos\n     * @param ref a variable used to make sure that keys are unique\n     * @param {boolean} problem is the current polyline in a state of a problem?\n     * @param {Position} lastPos  last position\n     */\n    insertPolyline(tmpPolyline, pos, ref = \"a\", problem = false, lastPos = null) {\n        /** if array contains less than one item than it can't form a polyline */\n        if (tmpPolyline.length <= 1) return;\n\n        let obj, text\n\n        let polylineText = (pos, problem = false, lastPos = null) => {\n            if (problem) {\n                return this.name + \" \" + numberToDateString(lastPos.date) + \" \" + numberToTimeString(lastPos.time) + \" => \" +\n                    numberToDateString(pos.date) + \" \" + numberToTimeString(pos.time)\n            }\n            return '<p style=\"text-align:center;\">this.name</p>'\n        }\n\n        /** generates obj which contains information about the type of line\n         * and text which is the inner text if the popup\n         */\n        if (problem) {\n            obj = {color: 'red', dashArray: \"20,20\"}\n            text = polylineText(pos, problem, lastPos)\n\n\n        } else {\n            obj = {color: this.color};\n            text = polylineText(pos)\n        }\n\n        /** creates the Polyline and pushes it to the array */\n        this.polylines.push(\n            L.polyline(tmpPolyline, obj).bindPopup(text)\n        );\n\n    }\n\n    checkDate(pos, state) {\n        let date = new Date(numberToDateString(pos.date, 1));\n        return state.startDate <= date && date <= state.endDate;\n    }\n\n    draw(map, state) {\n        if (state.allPos) {\n            this.layerGroup = L.layerGroup(this.polylines.concat(this.markers))\n            this.layerGroup.addTo(map)\n        } else if (this.markers.length > 0) {\n            this.layerGroup = L.layerGroup([this.markers[0]])\n            this.layerGroup.addTo(map);\n        }\n\n\n        this.SOSmarkers.forEach(arr => {\n            let marker = arr[0];\n            let pos = arr[1];\n            if (pos.interval === 0 || pos.interval === -1)\n                pos.interval = setInterval(() => {\n                    if (map.hasLayer(marker)) {\n                        map.removeLayer(marker);\n                    } else {\n                        map.addLayer(marker)\n                    }\n                }, 1000)\n\n        })\n    }\n\n    undrawSOS() {\n        this.SOSmarkers.forEach(arr => {\n            let marker = arr[0];\n            let pos = arr[1];\n            clearInterval(pos.interval);\n            marker.remove();\n            pos.interval = 0;\n\n        })\n    }\n}","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {Form} from \"react-bootstrap\";\nimport {Component} from \"react\";\nimport {\n    faCarBattery,\n    faMicrochip,\n    faPlug,\n    faThermometerEmpty,\n    faThermometerFull,\n    faThermometerHalf,\n    faThermometerQuarter,\n    faThermometerThreeQuarters\n} from '@fortawesome/free-solid-svg-icons'\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\nclass Filter extends Component {\n    temp;\n    thermIcon;\n    voltage;\n    tempSys;\n\n    constructor(props) {\n        super(props);\n        this.temp = getRandomInt(100);\n        this.thermIcon = faThermometerThreeQuarters;\n        if (this.temp > 80)\n            this.thermIcon = faThermometerFull;\n        else if (this.temp > 60)\n            this.thermIcon = faThermometerThreeQuarters;\n        else if (this.temp > 40)\n            this.thermIcon = faThermometerHalf;\n        else if (this.temp > 20)\n            this.thermIcon = faThermometerQuarter;\n        else\n            this.thermIcon = faThermometerEmpty;\n\n        this.voltage=(getRandomInt(15)+20+Math.random()).toPrecision(4)\n        this.tempSys=getRandomInt(70);\n\n    }\n    render() {\n\n        return (\n            <div>\n\n                <span>{this.props.name}</span>\n                <div>\n                    <div style={{display: \"flex\"}}>\n                        <Form.Check\n                            type=\"switch\"\n                            checked={this.props.isShown}\n                            onChange={() => {\n                                this.props.togglePerson(this.props.name);\n                            }}/>\n                        <span>show</span>\n                    </div>\n                    <div style={{display: \"flex\"}}>\n                        <Form.Check\n                            type=\"switch\"\n                            checked={this.props.isAllPos}\n                            disabled={!this.props.isShown}\n                            onChange={() => {\n                                this.props.toggleAllPos(this.props.name);\n                            }}/>\n                        <span>all pos ({this.props.posCount})</span>\n                    </div>\n\n                </div>\n\n                <hr style={{width: \"25%\"}}/>\n\n                <div style={{\n                    marginTop: \"5px\",\n                    marginBottom: \"10px\"\n                }}>\n                    <strong style={{paddingBottom: \"10px\"}}>Date Filter:</strong>\n                    <br/>\n                    <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\n                        <span> from:\n                        <input\n                            type=\"date\"\n                            onChange={(e) => this.props.setDate(this.props.name, 0, e.target.value)}\n                            value={(this.props.startDate).yyyymmdd()}\n                        />\n                    </span>\n                        <span style={{marginLeft: \"10px\"}}> to:\n                        <input\n                            type=\"date\"\n                            onChange={(e) => this.props.setDate(this.props.name, 1, e.target.value)}\n                            value={(this.props.endDate).yyyymmdd()}\n                        />\n                    </span>\n                    </div>\n                </div>\n\n                <div style={{display: \"flex\", justifyContent: \"space-between\", padding: \"20px\"}}>\n                    <div>\n                        <FontAwesomeIcon icon={this.thermIcon} size=\"2x\"/>\n                        <span style={{marginRight: \"10px\"}}/>\n                        {this.temp}°C\n                    </div>\n                    <div>\n                        <FontAwesomeIcon icon={faMicrochip} size=\"2x\"/>\n                        <span style={{marginRight: \"10px\"}}/>\n                        {this.tempSys}°C\n                    </div>\n                    <div>\n                        <FontAwesomeIcon icon={faCarBattery} size=\"2x\"/>\n                        <span style={{marginRight: \"10px\"}}/>\n                        Full : {this.voltage} V\n                    </div>\n                    <div>\n                        <FontAwesomeIcon icon={faPlug} size=\"2x\"/>\n                        <span style={{marginRight: \"10px\"}}/>\n                        charging...\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React from 'react';\nimport {numberToDateString, numberToTimeString} from \"../classes/Helper\";\nimport {Accordion, Table} from \"react-bootstrap\";\n\nfunction Info(props) {\n    let problemList = props.problems.map((key, index) => {\n        return (\n            <tr key={key[0].id + key[1].id}>\n                <td>{index + 1}</td>\n                <td>{numberToDateString(key[0].date)} {numberToTimeString(key[0].time)}< /td>\n                <td>({key[0].lt} , {key[0].lg})</td>\n                <td>{numberToDateString(key[1].date)} {numberToTimeString(key[1].time)}</td>\n                <td>({key[1].lt} , {key[1].lg})</td>\n            </tr>\n        )\n    })\n    let sosList = props.sos.map((pos, index) => {\n        return (<tr key={pos.id}>\n            <td>{index + 1}</td>\n            <td>{numberToDateString(pos.date)} {numberToTimeString(pos.time)}< /td>\n            <td>({pos.lt} , {pos.lg})</td>\n        </tr>)\n\n    })\n\n\n    return (\n        <Accordion>\n            <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>Infractions ({problemList.length})</Accordion.Header>\n                <Accordion.Body>\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>time 1</th>\n                            <th>position 1</th>\n                            <th>time 2</th>\n                            <th>position 2</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {problemList}\n                        </tbody>\n                    </Table>\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"1\">\n                <Accordion.Header>SOS ({sosList.length})</Accordion.Header>\n                <Accordion.Body>\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>time</th>\n                            <th>position</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {sosList}\n                        </tbody>\n                    </Table>\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    )\n\n}\n\nexport default Info;","import {Component} from \"react\";\nimport Filter from \"./Filter\";\nimport Info from \"./Info\";\n\nclass PersonPanel extends Component {\n    render() {\n        return (\n            <div style={{\n                padding: \"10px 3px\",\n                border: \"2px #7e8182 solid\",\n                marginTop: \"4px\"\n\n            }}>\n                <div>\n                    <Filter\n                        isShown={this.props.isShown}\n                        isAllPos={this.props.allPos}\n                        startDate={this.props.startDate}\n                        endDate={this.props.endDate}\n                        name={this.props.name}\n\n                        togglePerson={this.props.togglePerson}\n                        toggleAllPos={this.props.toggleAllPos}\n                        setDate={this.props.setDate}\n                         posCount={this.props.posCount}\n\n                    />\n                </div>\n                <Info problems={this.props.problems}\n                sos={this.props.sos}\n\n\n                />\n\n\n            </div>\n        );\n    }\n}\n\nexport default PersonPanel;\n","import {Component} from \"react\";\nimport PersonPanel from \"./PersonPanel\";\nimport debounce from \"lodash.debounce\";\n\nclass RightPanel extends Component {\n    invalidateMap = debounce(() => this.props.map.invalidateSize(), 500);\n    setMargin = debounce((e) => document.getElementById(\"cont\").style.marginTop = e.clientY - 20 + \"px\", 100)\n    isToggled = false;\n\n    render() {\n        let {widths,problems,peopleState}=this.props;\n        let mapW=widths[0];\n        let rightW=widths[1];\n        return (\n\n            <div style={{display: \"flex\"}}>\n                <div id=\"a\" style={{width: \"5vw\"}}\n                     onClick={() => {\n                         if (!this.isToggled) {\n                             document.getElementById(\"personPanelDiv\").style.width = \"0\";\n                             document.getElementById(\"mapDiv\").style.width = \"95vw\"\n                             document.getElementById(\"rightPanelDiv\").style.width = \"5vw\"\n                         } else {\n                             document.getElementById(\"personPanelDiv\").style.width = \"100%\";\n                             document.getElementById(\"mapDiv\").style.width = mapW\n                             document.getElementById(\"rightPanelDiv\").style.width = rightW\n                         }\n                         document.getElementById(\"arrows\").classList.toggle(\"rotate\")\n                         console.log(\"**************************\\n\", this.props.map)\n                         this.invalidateMap()\n                         this.isToggled = !this.isToggled;\n\n\n                     }}\n                     onMouseMove={(e)=>this.setMargin(e)}\n\n                >\n                    <div id={\"cont\"}>\n                        <span>\n                            <div style={{width: \"30px\", height: \"30px\"}}>\n\n                                <svg id=\"arrows\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"\n                                     viewBox=\"0 0 24 24\">\n                                    <path\n                                        d=\"M0 3.795l2.995-2.98 11.132 11.185-11.132 11.186-2.995-2.981 8.167-8.205-8.167-8.205zm18.04 8.205l-8.167 8.205 2.995 2.98 11.132-11.185-11.132-11.186-2.995 2.98 8.167 8.206z\"/>\n                                </svg>\n\n                            </div>\n                        </span>\n                    </div>\n                </div>\n                <div\n                    id=\"personPanelDiv\"\n                    style={{\n                        overflowY: 'scroll',\n                        height: '100vh',\n                        width: \"100%\"\n                    }}>\n                    {Object.keys(peopleState).map((key) => (\n                        <PersonPanel\n                            key={key}\n                            name={key}\n                            isShown={peopleState[key].isShown}\n                            allPos={peopleState[key].allPos}\n                            startDate={peopleState[key].startDate}\n                            endDate={peopleState[key].endDate}\n                            togglePerson={this.props.togglePerson}\n                            toggleAllPos={this.props.toggleAllPos}\n                            setDate={this.props.setDate}\n                            problems={problems[key]}\n                            sos={this.props.sos[key]}\n                            posCount={this.props.posCount[key]}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default RightPanel;\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Map from \"./Map\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Color, generateBoatIcon} from \"../classes/Helper\";\nimport {Position} from \"../classes/Position\";\nimport {Person} from \"../classes/Person\";\nimport RightPanel from \"./RightPanel\";\nimport debounce from \"lodash.debounce\"\n\nDate.prototype.yyyymmdd = function () {\n    const mm = this.getMonth() + 1; // getMonth() is zero-based\n    const dd = this.getDate();\n\n    return [this.getFullYear(),\n        (mm > 9 ? '' : '0') + mm,\n        (dd > 9 ? '' : '0') + dd\n    ].join('-');\n};\n\nexport let usefulValues = [];\n\nlet peopleState = [];\nlet people = [];\n\nclass App extends Component {\n    state = {\n        peopleState: []\n    }\n\n    debouncedCallback = debounce(() => {\n        this.map.invalidateSize();\n        this.rightW = document.getElementById(\"rightPanelDiv\").style.width\n        this.mapW = document.getElementById(\"mapDiv\").style.width\n    }, 500);\n    mapW = \"60vw\";\n    rightW = \"40vw\";\n\n    componentDidMount() {\n        console.log(\"start ComponentDidMount\", Date.now())\n        this.rightW = document.getElementById(\"rightPanelDiv\").style.width\n        this.mapW = document.getElementById(\"mapDiv\").style.width\n        axios.get(\"/api\").then((res) => {\n                // people = []\n                console.log(\"start axios\", Date.now())\n                let colorGen = new Color();\n                for (let pos of res.data) {\n                    if (people[pos.na] === undefined) {\n                        people[pos.na] = new Person(pos.na)\n                        let color = colorGen.getNext()\n\n                        people[pos.na].icons = [generateBoatIcon(color), generateBoatIcon(color, \"red\")];\n                        people[pos.na].color = color\n\n                        peopleState[pos.na] = {\n                            isShown: true,\n                            allPos: false,\n                            startDate: new Date(\"2021-01-01\"),\n                            endDate: new Date(\"2022-01-01\"),\n                        }\n\n                    }\n                    people[pos.na].positions.push(new Position(pos))\n                }\n                Object.values(people).map(person => person.update(peopleState[person.name]))\n                this.setState({peopleState: peopleState})\n            }\n        )\n\n        window.addEventListener(\"resize\", () => {\n            this.debouncedCallback()\n        })\n    }\n\n    /**\n     * The filter event handler function that shows or hides the layerGroup of one person\n     * @param {String} name the name of the person to hide or show\n     */\n    togglePerson(name) {\n        let tmp = Object.assign({}, this.state.peopleState);\n        tmp[name].isShown = !tmp[name].isShown;\n        people[name].layerGroup.remove();\n        people[name].undrawSOS();\n\n        this.setState({peopleState: tmp});\n    }\n\n    toggleAllPos(name) {\n        let tmp = Object.assign({}, this.state.peopleState);\n        tmp[name].allPos = !tmp[name].allPos;\n        people[name].layerGroup.remove();\n\n        this.setState({peopleState: tmp});\n    }\n\n    setDate(name, type, a) {\n        let tmp = Object.assign({}, this.state.peopleState);\n        if (type === 0)\n            tmp[name].startDate = new Date(a);\n        else\n            tmp[name].endDate = new Date(a);\n        people[name].layerGroup.remove();\n        people[name].undrawSOS();\n        people[name].update(tmp[name])\n        this.setState({layerGroups: tmp})\n\n\n    }\n\n    map = {};\n\n    setMap(map) {\n        this.map = map\n    }\n\n    render() {\n        console.log(\"start render\", Date.now())\n        /**\n         *\n         * @type {Person[]}\n         */\n        let problems = [];\n        let sos = [];\n        let posCount = [];\n        Object.values(people).forEach((person) => {\n            problems[person.name] = person.problems\n            let tmp = [];\n            tmp = person.allSOS.map(arr => arr[1])\n            sos[person.name] = tmp;\n            posCount[person.name] = person.markers.length;\n        })\n\n\n        return (\n            <div id={\"main\"}>\n                <div id=\"mapDiv\"\n                >\n                    <Map id=\"mapEl\"\n                         people={people}\n                         peopleState={this.state.peopleState}\n                         setMap={this.setMap.bind(this)}\n                    />\n\n                </div>\n                <div id=\"rightPanelDiv\">\n                    <RightPanel\n                        widths={[this.mapW, this.rightW]}\n                        map={this.map}\n                        peopleState={peopleState}\n                        togglePerson={this.togglePerson.bind(this)}\n                        setDate={this.setDate.bind(this)}\n                        toggleAllPos={this.toggleAllPos.bind(this)}\n                        problems={problems}\n                        sos={sos}\n                        posCount={posCount}\n                    /></div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}